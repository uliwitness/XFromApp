/*	***************************************************************************	PROJECT:	KStringEqualCallback		FILE:		KStringEqualCallback.cpp		PURPOSE:	Callback to compare two strings.			COPYRIGHT:	(C) Copyright 1999 by M. Uli Kusterer, all rights reserved.					REACH ME AT:				E-MAIL:		witness@zathras.de				URL:		http://www.zathras.de			REVISIONS:		1999-07-22	UK		Created.					************************************************************************ */#pragma mark [Headers]/* --------------------------------------------------------------------------------	Headers:   ----------------------------------------------------------------------------- */#include	"KStringEqualCallback.h"#include	<cctype>#pragma mark [Globals]/* --------------------------------------------------------------------------------	Globals/Static Variables:   ----------------------------------------------------------------------------- */// Put these li'l critters here.#pragma mark -#pragma mark [Init/Kill]/* --------------------------------------------------------------------------------	¥ CONSTRUCTOR:		Do some initialization.		TAKES:		-			GIVES:		-		REVISIONS:		1999-07-22	UK		Created.   ----------------------------------------------------------------------------- */KStringEqualCallback::KStringEqualCallback(): KExternalCallback(){	requestCode = xreqStringEqual;}/* --------------------------------------------------------------------------------	¥ DESTRUCTOR:		Do some cleanup.		REVISIONS:		1999-07-22	UK		Created.   ----------------------------------------------------------------------------- */KStringEqualCallback::~KStringEqualCallback(){	// Do your stuff here!}#pragma mark [Class Methods]/* --------------------------------------------------------------------------------	Run:		Actually do what this callback does. Pass values in and out in inArgs and		outArgs of the XCmdBlock, return an XCMD result in the param block.		TAKES:		-		GIVES:		-		REVISIONS:		1999-07-22	UK		Created.   ----------------------------------------------------------------------------- */void	KStringEqualCallback::Run( XCmdBlockPtr theBlock ){	Boolean			vIsEqual = true;	unsigned char	*vFirst,	// Pascal Strings.					*vSecond;	short			x = 1;		// P strings start at index 1.		vFirst = (unsigned char *) theBlock->inArgs[0];	vSecond = (unsigned char *) theBlock->inArgs[1];		// First, compare length. If that's not equal, the strings can't be either.	if( vFirst[0] != vSecond[0] )		vIsEqual = false;		// Length was OK? Loop over all chars and check them against each other, ignoring case:	while( vIsEqual && x <= vFirst[0] )	{		if( std::tolower(vFirst[x]) != std::tolower(vSecond[x]) )			vIsEqual = false;	}		// Store result where external can find it:	theBlock->outArgs[0] = vIsEqual;		theBlock->result = xresSucc;}