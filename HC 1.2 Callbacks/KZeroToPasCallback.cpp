/*	***************************************************************************	PROJECT:	KZeroToPasCallback		FILE:		KZeroToPasCallback.cpp		PURPOSE:	Callback to convert a C string to a Pascal string.			COPYRIGHT:	(C) Copyright 2001 by M. Uli Kusterer, all rights reserved.					REACH ME AT:				E-MAIL:		witness@zathras.de				URL:		http://www.zathras.de			REVISIONS:		2001-02-16	UK		Created.					************************************************************************ */#pragma mark [Headers]/* --------------------------------------------------------------------------------	Headers:   ----------------------------------------------------------------------------- */#include	"KZeroToPasCallback.h"#pragma mark [Globals]/* --------------------------------------------------------------------------------	Globals/Static Variables:   ----------------------------------------------------------------------------- */// Put these li'l critters here.#pragma mark -#pragma mark [Init/Kill]/* --------------------------------------------------------------------------------	¥ CONSTRUCTOR:		Do some initialization.		TAKES:		-			GIVES:		-		REVISIONS:		2001-02-16	UK		Created.   ----------------------------------------------------------------------------- */KZeroToPasCallback::KZeroToPasCallback(): KExternalCallback(){	requestCode = xreqZeroToPas;}/* --------------------------------------------------------------------------------	¥ DESTRUCTOR:		Do some cleanup.		REVISIONS:		2001-02-16	UK		Created.   ----------------------------------------------------------------------------- */KZeroToPasCallback::~KZeroToPasCallback(){	// Do your stuff here!}#pragma mark [Class Methods]/* --------------------------------------------------------------------------------	Run:		Actually do what this callback does. Pass values in and out in inArgs and		outArgs of the XCmdBlock, return an XCMD result in the param block.		TAKES:		-		GIVES:		-		REVISIONS:		2001-02-16	UK		Created.   ----------------------------------------------------------------------------- */void	KZeroToPasCallback::Run( XCmdBlockPtr theBlock ){	unsigned char	*ps;	char			*cs;	theBlock->result = xresFail;	cs = (char *) theBlock->inArgs[0];			// Pointer to our C string.	ps = (unsigned char *) theBlock->inArgs[1]; // Pointer to dest String.	ps[0] = std::strlen(cs);	std::memmove( ps +1, cs, ps[0] );	theBlock->result = xresSucc;}