/* =============================================================================	PROJECT:	KScanToReturnCallback		FILE:		KScanToReturnCallback.cpp		PURPOSE:	Callback to get a pointer at the first NULL or return character				after a character pointed to.			COPYRIGHT:	(C) Copyright 2001 by M. Uli Kusterer, all rights reserved.					REACH ME AT:				E-MAIL:		witness@zathras.de				URL:		http://www.zathras.de			REVISIONS:		2001-07-13	UK		Created.				   ========================================================================== */#pragma mark [Headers]/* --------------------------------------------------------------------------------	Headers:   ----------------------------------------------------------------------------- */#include	"KScanToReturnCallback.h"#pragma mark [Globals]/* --------------------------------------------------------------------------------	Globals/Static Variables:   ----------------------------------------------------------------------------- */// Put these li'l critters here.#pragma mark -#pragma mark [Init/Kill]/* --------------------------------------------------------------------------------	¥ CONSTRUCTOR:		Do some initialization.		TAKES:		-			GIVES:		-		REVISIONS:		2001-07-13	UK		Created.   ----------------------------------------------------------------------------- */KScanToReturnCallback::KScanToReturnCallback(): KExternalCallback(){	requestCode = xreqScanToReturn;}/* --------------------------------------------------------------------------------	¥ DESTRUCTOR:		Do some cleanup.		REVISIONS:		2001-07-13	UK		Created.   ----------------------------------------------------------------------------- */KScanToReturnCallback::~KScanToReturnCallback(){	// Do your stuff here!}#pragma mark [Class Methods]/* --------------------------------------------------------------------------------	Run:		Actually do what this callback does. Pass values in and out in inArgs and		outArgs of the XCmdBlock, return an XCMD result in the param block.		TAKES:		-		GIVES:		-		REVISIONS:		2001-07-13	UK		Created.   ----------------------------------------------------------------------------- */void	KScanToReturnCallback::Run( XCmdBlockPtr theBlock ){	char*		theString;	long		x = 0;		theString = (char*) theBlock->inArgs[0];		while( theString[x] != 0 && theString[x] != 0x0D )		x++;		theBlock->inArgs[0] = (long) theString +x;	theBlock->result = xresSucc;}