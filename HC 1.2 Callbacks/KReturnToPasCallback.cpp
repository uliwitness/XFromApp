/*	***************************************************************************	PROJECT:	KReturnToPasCallback		FILE:		KReturnToPasCallback.cpp		PURPOSE:	Callback to fetch a line from a C string.			COPYRIGHT:	(C) Copyright 2001 by M. Uli Kusterer, all rights reserved.					REACH ME AT:				E-MAIL:		witness@zathras.de				URL:		http://www.zathras.de			REVISIONS:		2001-02-17	UK		Created.					************************************************************************ */#pragma mark [Headers]/* --------------------------------------------------------------------------------	Headers:   ----------------------------------------------------------------------------- */#include	"KReturnToPasCallback.h"#pragma mark [Globals]/* --------------------------------------------------------------------------------	Globals/Static Variables:   ----------------------------------------------------------------------------- */// Put these li'l critters here.#pragma mark -#pragma mark [Init/Kill]/* --------------------------------------------------------------------------------	¥ CONSTRUCTOR:		Do some initialization.		TAKES:		-			GIVES:		-		REVISIONS:		2001-02-17	UK		Created.   ----------------------------------------------------------------------------- */KReturnToPasCallback::KReturnToPasCallback(): KExternalCallback(){	requestCode = xreqReturnToPas;}/* --------------------------------------------------------------------------------	¥ DESTRUCTOR:		Do some cleanup.		REVISIONS:		2001-02-17	UK		Created.   ----------------------------------------------------------------------------- */KReturnToPasCallback::~KReturnToPasCallback(){	// Do your stuff here!}#pragma mark [Class Methods]/* --------------------------------------------------------------------------------	Run:		Actually do what this callback does. Pass values in and out in inArgs and		outArgs of the XCmdBlock, return an XCMD result in the param block.		TAKES:		-		GIVES:		-		REVISIONS:		2001-02-17	UK		Created.   ----------------------------------------------------------------------------- */void	KReturnToPasCallback::Run( XCmdBlockPtr theBlock ){	char*			zeroStr;	unsigned char*	tx;	long			x = 0;		zeroStr = (char*) theBlock->inArgs[0];	tx = (unsigned char*) theBlock->inArgs[1];		while( zeroStr[x] != 0 && zeroStr[x] != 0x0D )		x++;			tx[0] = x > 255 ? 255 : x;	std::memmove( tx +1, zeroStr, tx[0] );	theBlock->result = xresSucc;}