/*	***************************************************************************	PROJECT:	KFreeHandleCallback		FILE:		KFreeHandleCallback.cpp		PURPOSE:	Dispose of a Handle.			COPYRIGHT:	(C) Copyright 2001 by M. Uli Kusterer, all rights reserved.					REACH ME AT:				E-MAIL:		witness@zathras.de				URL:		http://www.zathras.de			REVISIONS:		2001-02-16	UK		Created.					************************************************************************ */#pragma mark [Headers]/* --------------------------------------------------------------------------------	Headers:   ----------------------------------------------------------------------------- */#include	"KFreeHandleCallback.h"#include	"FakeHandles.h"#pragma mark [Globals]/* --------------------------------------------------------------------------------	Globals/Static Variables:   ----------------------------------------------------------------------------- */// Put these li'l critters here.#pragma mark -#pragma mark [Init/Kill]/* --------------------------------------------------------------------------------	¥ CONSTRUCTOR:		Do some initialization.		TAKES:		-			GIVES:		-		REVISIONS:		2001-02-16	UK		Created.   ----------------------------------------------------------------------------- */KFreeHandleCallback::KFreeHandleCallback()	: KExternalCallback(){	requestCode = xreqFreeHandle;}/* --------------------------------------------------------------------------------	¥ DESTRUCTOR:		Do some cleanup.		REVISIONS:		2001-02-16	UK		Created.   ----------------------------------------------------------------------------- */KFreeHandleCallback::~KFreeHandleCallback(){	// Do your stuff here!}#pragma mark [Class Methods]/* --------------------------------------------------------------------------------	Run:		Actually do what this callback does. Pass values in and out in inArgs and		outArgs of the XCmdBlock, return an XCMD result in the param block.		TAKES:		-		GIVES:		-		REVISIONS:		2001-02-16	UK		Created.   ----------------------------------------------------------------------------- */void	KFreeHandleCallback::Run( XCmdBlockPtr theBlock ){	Handle		theHand;        theHand = (Handle) theBlock->inArgs[0];    DisposeHandle( theHand );	theBlock->result = xresSucc;}