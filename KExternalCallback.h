/*	***************************************************************************	PROJECT:	C++ XFromApp		FILE:		KExternalCallback.h		PURPOSE:	Generic callback class for an XCMD engine.			COPYRIGHT:	(C) Copyright 1998-99 by M. Uli Kusterer, all rights reserved.		REACH ME AT:				E-MAIL:		witness@zathras.de				URL:		http://www.zathras.de			REVISIONS:		99-07-21	UK		Added request code accessor + comments.		98-11-01	UK		Created.					************************************************************************ */#ifndef KEXTERNALCALLBACK_H#define KEXTERNALCALLBACK_H/* --------------------------------------------------------------------------------	Headers:   ----------------------------------------------------------------------------- */#include	"KExternalCall.h"/* --------------------------------------------------------------------------------	Constants:   ----------------------------------------------------------------------------- */enum {	xresSucc = 0,		// Everything fine.	xresFail,			// Failed. Error condition.	xresNotImp			// Callback not implemented. Guess the XCMD was written for another engine.};/* HyperCard 1.x Callback request codes: */enum {  	xreqSendCardMessage = 1,	xreqEvalExpr,	xreqStringLength,	xreqStringMatch,	xreqSendHCMessage,	/* 5 */	xreqZeroBytes,	xreqPasToZero,	xreqZeroToPas,	xreqStrToLong,	xreqStrToNum,		/* 10 */	xreqStrToBool,	xreqStrToExt,	xreqLongToStr,	xreqNumToStr,	xreqNumToHex,		/* 15 */	xreqBoolToStr,	xreqExtToStr,	xreqGetGlobal,	xreqSetGlobal,	xreqGetFieldByName,	/* 20 */	xreqGetFieldByNum,	xreqGetFieldByID,	xreqSetFieldByName,	xreqSetFieldByNum,	xreqSetFieldByID,	/* 25 */	xreqStringEqual, 	xreqReturnToPas,	xreqScanToReturn,			// #28.	xreqGetMaskAndData,			// #29 - undocumented [0] = BitMap* mask [1] = BitMap* data	xreqChangedMaskAndData,		// #30 - undocumented.	xreqScanToZero = 39};/* HyperCard 2.x request codes: */enum {	xreqZeroTermHandle = 32,	xreqPrintTEHandle,	xreqSendHCEvent,	xreqHCWordBreakProc,	xreqBeginXSound,	xreqEndXSound,	xreqRunHandler,	xreqGetXResInfo = 40,	xreqFrontDocWindow = 42,	xreqPointToStr,	xreqRectToStr,	xreqStrToPoint,	xreqStrToRect,	xreqGetFieldTE,	xreqSetFieldTE,	xreqStackNameToNum = 52,	xreqNotify,	xreqNewXWindow = 100,	xreqCloseXWindow,	xreqSetXWIdleTime,	xreqXWHasInterruptCode,	xreqRegisterXWMenu,	xreqBeginXWEdit,	xreqXWAllowReEntrancy = 109,	// Conflicts with OMO's xreqGetHandleSize.	xreqSendWindowMessage = 110,	// Conflicts with OMO's xreqResizeHandle.	xreqHideHCPalettes = 111,	xreqShowHCPalettes};/* SuperCard request codes: */enum {	xreqInstallPData		= 4503,	xreqPixByName			= 5000,	xreqPixByID,	xreqPixByNum,	xreqAddStar,	xreqGetStarByName,	xreqGetStarById,	xreqDelStarByName,	xreqDelStarById,	xreqAltStarByName,	xreqAltStarById,	xreqCountStars,	xreqGetStarInfo,	xreqSendError,	xreqSetStarId};/* OMO Request codes */enum {	xreqAllocHandle			= 107,	xreqFreeHandle			= 108,	xreqGetHandleSize		= 109,	// Conflicts with HC's xreqXWAllowReEntrancy.	xreqResizeHandle		= 110,	// Conflicts with HC's xreqSendWindowMessage.	xreqGetOMOInstance		= 150};/* Request codes introduced with the new Carbon xCmd/xFcn protocol: */enum {	xreqLockHandle			= 20000,	xreqUnlockHandle		= 20001,	xreqGetHandleChars		= 20002};/* --------------------------------------------------------------------------------	Class Implementation:   ----------------------------------------------------------------------------- */class	KExternalCallback{protected:	short		requestCode;	public:			KExternalCallback()		{};	virtual	~KExternalCallback()	{};		virtual void	Run( XCmdBlockPtr theBlock )	{ theBlock->result = xresNotImp; };		// Do actual work here.		short	GetRequestCode()				{ return requestCode; };	// For use by callback registry.};#endif /* KEXTERNALCALLBACK_H */